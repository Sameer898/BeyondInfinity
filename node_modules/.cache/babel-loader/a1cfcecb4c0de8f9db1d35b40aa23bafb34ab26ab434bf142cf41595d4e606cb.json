{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useFormField = void 0;\nvar _fieldReducer = require(\"../reducer/fieldReducer\");\nvar _prepareNameForValidate = require(\"./prepareNameForValidate\");\n\n/**\n * @param  fieldArgs { import(\"../useForm\").IFormFieldArgs}\n * @returns {import(\"../useForm\").IFormField}\n */\nvar useFormField = function useFormField(state, dispatch) {\n  var fieldArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var requiredMessage = fieldArgs.requiredMessage || 'Required';\n  var validate = function validate(value) {\n    var touched = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var result;\n    if (value !== '' && value !== undefined && fieldArgs.validate) {\n      result = fieldArgs.validate(value, (0, _prepareNameForValidate.prepareNameForValidate)(fieldArgs.name), state.get('getAllValues'));\n    }\n    if (!Boolean(result) && !fieldArgs.optional && touched && value === '') {\n      result = requiredMessage;\n    }\n    if (touched || !Boolean(result) && state.getIn(['current', 'helperText'])) {\n      dispatch(_fieldReducer.actions.validationResult(fieldArgs.name, Boolean(result), result));\n    }\n    return result;\n  };\n  var setValue = function setValue(v) {\n    dispatch(_fieldReducer.actions.updateValue(fieldArgs.name, v));\n    validate(v, state.getIn(['current', 'touched']));\n  };\n  var onChange = function onChange(event) {\n    var value = fieldArgs.valueFromChange ? fieldArgs.valueFromChange(event) : event.target.value;\n    var coercedValue = fieldArgs.normalize ? fieldArgs.normalize(value) : value;\n    setValue(coercedValue);\n  };\n  var onBlur = function onBlur() {\n    dispatch(_fieldReducer.actions.touched(fieldArgs.name));\n    validate(state.getIn(['current', 'value']), true);\n  };\n  return {\n    props: {\n      error: state.getIn(['current', 'error']),\n      helperText: state.getIn(['current', 'helperText']),\n      label: state.getIn(['initial', 'label']),\n      value: state.getIn(['current', 'value']),\n      // handlers\n      onBlur: onBlur,\n      onChange: onChange\n    },\n    meta: {\n      touched: state.getIn(['current', 'touched']),\n      pristine: state.getIn(['current', 'pristine'])\n    },\n    setValue: setValue\n  };\n};\nexports.useFormField = useFormField;","map":{"version":3,"names":["Object","defineProperty","exports","value","useFormField","_fieldReducer","require","_prepareNameForValidate","state","dispatch","fieldArgs","arguments","length","undefined","requiredMessage","validate","touched","result","prepareNameForValidate","name","get","Boolean","optional","getIn","actions","validationResult","setValue","v","updateValue","onChange","event","valueFromChange","target","coercedValue","normalize","onBlur","props","error","helperText","label","meta","pristine"],"sources":["D:/web development/Unzip/App/node_modules/react-hooks-useform/dist/fields/useFormField.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useFormField = void 0;\n\nvar _fieldReducer = require(\"../reducer/fieldReducer\");\n\nvar _prepareNameForValidate = require(\"./prepareNameForValidate\");\n\n/**\n * @param  fieldArgs { import(\"../useForm\").IFormFieldArgs}\n * @returns {import(\"../useForm\").IFormField}\n */\nvar useFormField = function useFormField(state, dispatch) {\n  var fieldArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var requiredMessage = fieldArgs.requiredMessage || 'Required';\n\n  var validate = function validate(value) {\n    var touched = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var result;\n\n    if (value !== '' && value !== undefined && fieldArgs.validate) {\n      result = fieldArgs.validate(value, (0, _prepareNameForValidate.prepareNameForValidate)(fieldArgs.name), state.get('getAllValues'));\n    }\n\n    if (!Boolean(result) && !fieldArgs.optional && touched && value === '') {\n      result = requiredMessage;\n    }\n\n    if (touched || !Boolean(result) && state.getIn(['current', 'helperText'])) {\n      dispatch(_fieldReducer.actions.validationResult(fieldArgs.name, Boolean(result), result));\n    }\n\n    return result;\n  };\n\n  var setValue = function setValue(v) {\n    dispatch(_fieldReducer.actions.updateValue(fieldArgs.name, v));\n    validate(v, state.getIn(['current', 'touched']));\n  };\n\n  var onChange = function onChange(event) {\n    var value = fieldArgs.valueFromChange ? fieldArgs.valueFromChange(event) : event.target.value;\n    var coercedValue = fieldArgs.normalize ? fieldArgs.normalize(value) : value;\n    setValue(coercedValue);\n  };\n\n  var onBlur = function onBlur() {\n    dispatch(_fieldReducer.actions.touched(fieldArgs.name));\n    validate(state.getIn(['current', 'value']), true);\n  };\n\n  return {\n    props: {\n      error: state.getIn(['current', 'error']),\n      helperText: state.getIn(['current', 'helperText']),\n      label: state.getIn(['initial', 'label']),\n      value: state.getIn(['current', 'value']),\n      // handlers\n      onBlur: onBlur,\n      onChange: onChange\n    },\n    meta: {\n      touched: state.getIn(['current', 'touched']),\n      pristine: state.getIn(['current', 'pristine'])\n    },\n    setValue: setValue\n  };\n};\n\nexports.useFormField = useFormField;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}