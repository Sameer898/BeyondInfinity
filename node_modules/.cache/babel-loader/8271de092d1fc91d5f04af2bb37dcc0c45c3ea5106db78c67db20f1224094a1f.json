{"ast":null,"code":"var _jsxFileName = \"D:\\\\web development\\\\Unzip\\\\App\\\\myapp\\\\src\\\\components\\\\core\\\\AddCoursePage\\\\CourseInformation\\\\Upload.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { useDropzone } from \"react-dropzone\";\nimport { useState } from 'react';\nimport { Player } from \"video-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Upload = ({\n  name,\n  register,\n  setValue,\n  getValuse,\n  editData = null,\n  video = null,\n  viewData = null\n}) => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState();\n  const [previewSource, setPrviewSource] = useState();\n  const onDrop = acceptedFile => {\n    const file = acceptedFile[0];\n    previewFile(file);\n    setSelectedFile(file);\n  };\n  const {\n    getRootProps,\n    getInputProps,\n    isDragValue\n  } = useDropzone({\n    accept: !video ? {\n      \"image/*\": [\".jpeg\", \".jpg\", \".png\"]\n    } : {\n      \"video/*\": [\".mp4\"]\n    },\n    onDrop\n  });\n  const previewFile = file => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setPrviewSource(file);\n    };\n  };\n  const inputRef = useRef();\n  useEffect(() => {\n    register(name, {\n      required: true\n    });\n  }, []);\n  useEffect(() => {\n    setValue(name);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: previewSource ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!video ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: previewSource,\n        alt: \"image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Player, {\n        aspectRatio: \"16:9\",\n        playsInline: true,\n        src: previewSource\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), !viewData && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-orange-400\",\n        onClick: () => {\n          setPrviewSource(null);\n          setSelectedFile(null);\n          setValue(name, null);\n        },\n        children: \"cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps(),\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Enter to add image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 4\n  }, this);\n};\n_s(Upload, \"/W31SoixQl8SqJTsyCvoD95xBhM=\", false, function () {\n  return [useDropzone];\n});\n_c = Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useRef","useDropzone","useState","Player","jsxDEV","_jsxDEV","Upload","name","register","setValue","getValuse","editData","video","viewData","_s","selectedFile","setSelectedFile","previewSource","setPrviewSource","onDrop","acceptedFile","file","previewFile","getRootProps","getInputProps","isDragValue","accept","reader","FileReader","readAsDataURL","onloadend","inputRef","useEffect","required","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","aspectRatio","playsInline","className","onClick","ref","_c","$RefreshReg$"],"sources":["D:/web development/Unzip/App/myapp/src/components/core/AddCoursePage/CourseInformation/Upload.js"],"sourcesContent":["import React, { useRef } from 'react'\r\nimport { useDropzone } from \"react-dropzone\"\r\nimport { useState } from 'react';\r\nimport { Player } from \"video-react\"\r\nexport const Upload = ({\r\n    name,\r\n    register,\r\n    setValue,\r\n    getValuse,\r\n    editData=null,\r\n    video=null,\r\n    viewData=null\r\n}) => {\r\n   const [selectedFile,setSelectedFile]=useState();\r\n   const [previewSource,setPrviewSource]=useState();\r\n\r\n   const onDrop=(acceptedFile)=>{\r\n    const file=acceptedFile[0];\r\n    previewFile(file);\r\n    setSelectedFile(file);\r\n   }\r\n   const {getRootProps,getInputProps,isDragValue}=useDropzone({\r\n    accept:!video?{ \"image/*\": [\".jpeg\", \".jpg\", \".png\"] }\r\n    :{\"video/*\":[\".mp4\"]}\r\n   ,onDrop\r\n   })\r\n\r\n   const previewFile=(file)=>{\r\n    const reader=new FileReader();\r\n    reader.readAsDataURL(file)\r\n    reader.onloadend=()=>{\r\n        setPrviewSource(file);\r\n    }\r\n   }\r\n   const inputRef=useRef();\r\n\r\n   useEffect(()=>{\r\n    register(name,{required:true})\r\n   },[]);\r\n   useEffect(()=>{\r\n    setValue(name,)\r\n   })\r\n  return (\r\n   <div>\r\n        {\r\n            previewSource?\r\n            <div>\r\n            {\r\n                !video ?<img src={previewSource}  alt=\"image\"/>\r\n                :\r\n                <Player aspectRatio='16:9' playsInline src={previewSource}/>\r\n            }\r\n            {\r\n                !viewData &&\r\n                <button className=\"bg-orange-400\" onClick={()=>\r\n                                {\r\n                                    setPrviewSource(null);\r\n                                    setSelectedFile(null);\r\n                                    setValue(name,null);\r\n                                }}   >\r\n                cancel\r\n                </button>\r\n            }\r\n            </div>\r\n            :\r\n            (<div {...getRootProps()}>\r\n                <input {...getInputProps()} ref={inputRef} />\r\n                <div> Enter to add image</div>\r\n            </div>)\r\n        }\r\n   </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}