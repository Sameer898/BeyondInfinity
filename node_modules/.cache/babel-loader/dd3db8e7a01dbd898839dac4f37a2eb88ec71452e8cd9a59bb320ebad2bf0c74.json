{"ast":null,"code":"import { useDispatch } from \"react-redux\";\nimport { apiConnector } from \"../apiConnector\";\nimport { endpoints } from \"../apis\";\nimport { toast } from 'react-hot-toast';\nimport { setUser } from \"../../slices/profileSlice\";\nimport { setToken } from \"../../slices/authSlice\";\nconst {\n  SENDOTP_API,\n  SIGNUP_API,\n  LOGIN_API\n} = endpoints;\nexport function sendOTP(email, navigate) {\n  return async dispatch => {\n    const toastId = toast.loading(\"Loading...\");\n    try {\n      const response = await apiConnector(\"POST\", SENDOTP_API, {\n        email,\n        checkUserPresent: true\n      });\n      console.log(\"SENDOTP API RESPONSE............\", response);\n      console.log(response.data.success);\n      if (!response.data.success) {\n        throw new Error(response.data.message);\n      }\n      toast.success(\"OTP Sent Successfully\");\n      navigate(\"/verify-email\");\n    } catch (error) {\n      console.log(\"SENDOTP API ERROR............\", error);\n      toast.error(\"Could Not Send OTP\");\n    }\n    toast.dismiss(toastId);\n  };\n}\nexport function setSignup({\n  firstName,\n  lastName,\n  password,\n  confirmPassword,\n  otp,\n  accountType,\n  email\n}, navigate) {\n  return async dispatch => {\n    const toastId = toast.loading(\"Loading...\");\n    try {\n      const res = await apiConnector(\"POST\", SIGNUP_API, {\n        firstName,\n        lastName,\n        password,\n        confirmPassword,\n        otp,\n        accountType,\n        email\n      });\n      if (!res.data.success) {\n        throw new Error(res.data.message);\n      }\n      toast.success(\"Sign up successfully\");\n      navigate('/login');\n    } catch (error) {\n      console.log(\"Failed to sign up data.\");\n      console.log(error);\n    }\n    toast.dismiss(toastId);\n  };\n}\nexport const sendLogin = async ({\n  email,\n  password\n}, navigate, dispatch, user) => {\n  const toastId = toast.loading(\"Loading...\");\n  try {\n    const res = await apiConnector(\"POST\", LOGIN_API, {\n      email,\n      password\n    });\n    if (!res.data.success) {\n      throw new Error(res.data.message);\n    }\n    localStorage.setItem(\"token\", JSON.stringify(res.data.token));\n    localStorage.setItem(\"user\", JSON.stringify(res.data.token));\n    dispatch(setUser(res.data.user));\n    toast.success(\"Login successfully.\");\n    console.log(user);\n    navigate(\"/dashboard/my-profile\");\n  } catch (error) {\n    console.log(\"Failed to send login data\");\n    console.log(error);\n  }\n  toast.dismiss(toastId);\n};\nexport const logout = async (dispatch, user, token, navigate) => {\n  dispatch(setToken(null));\n  dispatch(setUser(null));\n  localStorage.setItem(\"\", JSON.stringify(user));\n  localStorage.setItem(\"\", JSON.stringify(token));\n  toast.success(\"Loggout Successfully.\");\n  navigate('/');\n};","map":{"version":3,"names":["useDispatch","apiConnector","endpoints","toast","setUser","setToken","SENDOTP_API","SIGNUP_API","LOGIN_API","sendOTP","email","navigate","dispatch","toastId","loading","response","checkUserPresent","console","log","data","success","Error","message","error","dismiss","setSignup","firstName","lastName","password","confirmPassword","otp","accountType","res","sendLogin","user","localStorage","setItem","JSON","stringify","token","logout"],"sources":["D:/web development/Unzip/App/myapp/src/services/operations/authAPI.js"],"sourcesContent":["import { useDispatch } from \"react-redux\";\r\nimport { apiConnector } from \"../apiConnector\";\r\nimport { endpoints } from \"../apis\";\r\nimport {toast} from 'react-hot-toast'\r\nimport { setUser } from \"../../slices/profileSlice\";\r\nimport { setToken } from \"../../slices/authSlice\";\r\nconst {SENDOTP_API,SIGNUP_API, LOGIN_API}=endpoints;\r\nexport function sendOTP(email, navigate) {\r\n  return async (dispatch) => {\r\n    const toastId = toast.loading(\"Loading...\")\r\n    try {\r\n      const response = await apiConnector(\"POST\", SENDOTP_API, {\r\n        email,\r\n        checkUserPresent: true,\r\n      })\r\n      console.log(\"SENDOTP API RESPONSE............\", response)\r\n\r\n      console.log(response.data.success)\r\n\r\n      if (!response.data.success) {\r\n        throw new Error(response.data.message)\r\n      }\r\n\r\n      toast.success(\"OTP Sent Successfully\")\r\n      navigate(\"/verify-email\")\r\n    } catch (error) {\r\n      console.log(\"SENDOTP API ERROR............\", error)\r\n      toast.error(\"Could Not Send OTP\")\r\n    }\r\n    toast.dismiss(toastId)\r\n  }\r\n}\r\n\r\nexport function setSignup({firstName,\r\n  lastName,\r\n  password,\r\n  confirmPassword,\r\n  otp,\r\n  accountType,\r\n  email},navigate)\r\n  {\r\n    return async (dispatch)=>{\r\n      const toastId=toast.loading(\"Loading...\");\r\n      try{\r\n        const res=await apiConnector(\"POST\",SIGNUP_API,{\r\n          firstName,\r\n          lastName,\r\n          password,\r\n          confirmPassword,\r\n          otp,\r\n          accountType,\r\n          email\r\n        });\r\n        if(!res.data.success){\r\n          throw new Error(res.data.message);\r\n        }\r\n        toast.success(\"Sign up successfully\");\r\n        navigate('/login');\r\n    \r\n      }catch(error){\r\n        console.log(\"Failed to sign up data.\");\r\n        console.log(error);\r\n      }\r\n      toast.dismiss(toastId)\r\n    }\r\n  \r\n}\r\n\r\nexport const sendLogin= async ({email,password},navigate,dispatch,user)=>{\r\n  const toastId=toast.loading(\"Loading...\");\r\n    try{\r\n      const res=await apiConnector(\"POST\", LOGIN_API,{\r\n        email,password\r\n      })\r\n      if(!res.data.success){\r\n        throw new Error(res.data.message);\r\n      }\r\n      localStorage.setItem(\"token\",JSON.stringify(res.data.token));\r\n      localStorage.setItem(\"user\",JSON.stringify(res.data.token));\r\n      dispatch(setUser(res.data.user));\r\n      toast.success(\"Login successfully.\");\r\n      console.log(user);\r\n      navigate(\"/dashboard/my-profile\");\r\n\r\n    }catch(error){\r\n      console.log(\"Failed to send login data\");\r\n      console.log(error);\r\n    }\r\n    toast.dismiss(toastId);\r\n}\r\n\r\nexport const logout=async (dispatch,user,token,navigate)=>{\r\n    dispatch(setToken(null));\r\n    dispatch(setUser(null));\r\n    localStorage.setItem(\"\",JSON.stringify(user));\r\n    localStorage.setItem(\"\",JSON.stringify(token));\r\n    toast.success(\"Loggout Successfully.\");\r\n    navigate('/');\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}