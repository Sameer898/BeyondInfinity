{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null,\n  loading: false\n};\nconst profileSlice = createSlice({\n  name: \"user\",\n  initialState: initialState,\n  reducers: {\n    setUser(state, action) {\n      state.user = action.payload;\n    },\n    setLoading(state, action) {\n      state.loading = action.payload;\n    }\n  }\n});\nexport const {\n  setUser,\n  setLoading\n} = profileSlice.actions;\nexport default profileSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","user","localStorage","getItem","JSON","parse","loading","profileSlice","name","reducers","setUser","state","action","payload","setLoading","actions","reducer"],"sources":["D:/web development/Unzip/App/myapp/src/slices/profileSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nconst initialState={\r\n    user:localStorage.getItem(\"user\")?JSON.parse(localStorage.getItem(\"user\")):null,\r\n    loading:false\r\n}\r\n\r\nconst profileSlice=createSlice({\r\n    name:\"user\",\r\n    initialState:initialState,\r\n    reducers:{\r\n        setUser(state,action){\r\n            state.user=action.payload\r\n        },\r\n        setLoading(state,action){\r\n            state.loading=action.payload\r\n        }\r\n    }\r\n})\r\nexport const {setUser,setLoading}=profileSlice.actions;\r\nexport default profileSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAC;EACfC,IAAI,EAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,GAACC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAC,IAAI;EAC/EG,OAAO,EAAC;AACZ,CAAC;AAED,MAAMC,YAAY,GAACR,WAAW,CAAC;EAC3BS,IAAI,EAAC,MAAM;EACXR,YAAY,EAACA,YAAY;EACzBS,QAAQ,EAAC;IACLC,OAAOA,CAACC,KAAK,EAACC,MAAM,EAAC;MACjBD,KAAK,CAACV,IAAI,GAACW,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDC,UAAUA,CAACH,KAAK,EAACC,MAAM,EAAC;MACpBD,KAAK,CAACL,OAAO,GAACM,MAAM,CAACC,OAAO;IAChC;EACJ;AACJ,CAAC,CAAC;AACF,OAAO,MAAM;EAACH,OAAO;EAACI;AAAU,CAAC,GAACP,YAAY,CAACQ,OAAO;AACtD,eAAeR,YAAY,CAACS,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}