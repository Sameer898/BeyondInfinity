{"ast":null,"code":"import { apiConnector } from \"../apiConnector\";\nimport { endpoints } from \"../apis\";\nimport { toast } from 'react-hot-toast';\nconst {\n  SENDOTP_API\n} = endpoints;\nexport const sendOTP = async (email, navigate) => {\n  const toastId = toast.loading(\"Loading...\");\n  try {\n    const response = await apiConnector(\"POST\", SENDOTP_API, {\n      email,\n      checkUserPresent: true\n    });\n    console.log(\"SENDOTP API RESPONSE............\", response);\n    console.log(response.data.success);\n    if (!response.data.success) {\n      throw new Error(response.data.message);\n    }\n    toast.success(\"OTP Sent Successfully\");\n    navigate(\"/verify-email\");\n  } catch (error) {\n    console.log(\"SENDOTP API ERROR............\", error);\n    toast.error(\"Could Not Send OTP\");\n  }\n  toast.dismiss(toastId);\n};","map":{"version":3,"names":["apiConnector","endpoints","toast","SENDOTP_API","sendOTP","email","navigate","toastId","loading","response","checkUserPresent","console","log","data","success","Error","message","error","dismiss"],"sources":["D:/web development/Unzip/App/myapp/src/services/operations/authAPI.js"],"sourcesContent":["import { apiConnector } from \"../apiConnector\";\r\nimport { endpoints } from \"../apis\";\r\nimport {toast} from 'react-hot-toast'\r\nconst {SENDOTP_API}=endpoints;\r\nexport const sendOTP=async (email,navigate)=>{\r\n    const toastId=toast.loading(\"Loading...\");\r\n    try {\r\n        const response = await apiConnector(\"POST\", SENDOTP_API, {\r\n          email,\r\n          checkUserPresent: true,\r\n        })\r\n        console.log(\"SENDOTP API RESPONSE............\", response)\r\n  \r\n        console.log(response.data.success)\r\n  \r\n        if (!response.data.success) {\r\n          throw new Error(response.data.message)\r\n        }\r\n  \r\n        toast.success(\"OTP Sent Successfully\")\r\n        navigate(\"/verify-email\")\r\n      } catch (error) {\r\n        console.log(\"SENDOTP API ERROR............\", error)\r\n        toast.error(\"Could Not Send OTP\")\r\n      }\r\n    toast.dismiss(toastId);\r\n}"],"mappings":"AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,SAAS,QAAQ,SAAS;AACnC,SAAQC,KAAK,QAAO,iBAAiB;AACrC,MAAM;EAACC;AAAW,CAAC,GAACF,SAAS;AAC7B,OAAO,MAAMG,OAAO,GAAC,MAAAA,CAAOC,KAAK,EAACC,QAAQ,KAAG;EACzC,MAAMC,OAAO,GAACL,KAAK,CAACM,OAAO,CAAC,YAAY,CAAC;EACzC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMT,YAAY,CAAC,MAAM,EAAEG,WAAW,EAAE;MACvDE,KAAK;MACLK,gBAAgB,EAAE;IACpB,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEH,QAAQ,CAAC;IAEzDE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC;IAElC,IAAI,CAACL,QAAQ,CAACI,IAAI,CAACC,OAAO,EAAE;MAC1B,MAAM,IAAIC,KAAK,CAACN,QAAQ,CAACI,IAAI,CAACG,OAAO,CAAC;IACxC;IAEAd,KAAK,CAACY,OAAO,CAAC,uBAAuB,CAAC;IACtCR,QAAQ,CAAC,eAAe,CAAC;EAC3B,CAAC,CAAC,OAAOW,KAAK,EAAE;IACdN,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEK,KAAK,CAAC;IACnDf,KAAK,CAACe,KAAK,CAAC,oBAAoB,CAAC;EACnC;EACFf,KAAK,CAACgB,OAAO,CAACX,OAAO,CAAC;AAC1B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}