{"ast":null,"code":"var _jsxFileName = \"D:\\\\web development\\\\Unzip\\\\App\\\\myapp\\\\src\\\\components\\\\core\\\\AddCourse\\\\CourseInformation\\\\Upload.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDropzone } from \"react-dropzone\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Upload = ({\n  name,\n  label,\n  register,\n  setValue,\n  errors,\n  video = false,\n  viewData = null,\n  editData = null\n}) => {\n  _s();\n  const {\n    course\n  } = useSelector(state => state.course);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [previewSourse, setPreviewSourse] = useState();\n  const onDrop = acceptedFile => {\n    const file = acceptedFile[0];\n    if (file) {\n      previewFile(file);\n      setSelectedFile(file);\n    }\n  };\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: !video ? {\n      \"image/*\": [\".jpeg\", \".jpg\", \"png\"]\n    } : {\n      \"video/*\": [\".mp4\"]\n    },\n    onDrop\n  });\n  const previewFile = file => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setPreviewSourse(reader.result);\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ...getRootProps,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ...getInputProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), \"enter here for image uploading\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Upload, \"cwiHjcSvfReIQ0QfA38jg+6Xgt4=\", false, function () {\n  return [useSelector, useDropzone];\n});\n_c = Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useSelector","useDropzone","useState","jsxDEV","_jsxDEV","Upload","name","label","register","setValue","errors","video","viewData","editData","_s","course","state","selectedFile","setSelectedFile","previewSourse","setPreviewSourse","onDrop","acceptedFile","file","previewFile","getRootProps","getInputProps","accept","reader","FileReader","readAsDataURL","onloadend","result","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/web development/Unzip/App/myapp/src/components/core/AddCourse/CourseInformation/Upload.js"],"sourcesContent":["import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useDropzone } from \"react-dropzone\"\r\nimport { useState } from 'react'\r\nexport const Upload = ({\r\n    name,\r\n    label,\r\n    register,\r\n    setValue,\r\n    errors,\r\n    video = false,\r\n    viewData = null,\r\n    editData = null,\r\n}) => {\r\n    const {course}=useSelector((state)=>state.course);\r\n    const [selectedFile,setSelectedFile]=useState(null);\r\n    const [previewSourse,setPreviewSourse]=useState();\r\n    const onDrop=(acceptedFile)=>{\r\n        const file=acceptedFile[0];\r\n        if(file){\r\n            previewFile(file);\r\n            setSelectedFile(file);\r\n        }\r\n    }\r\n    const {getRootProps,getInputProps}=useDropzone({\r\n        accept:!video?{\"image/*\":[\".jpeg\",\".jpg\",\"png\"]}:{\"video/*\":[\".mp4\"]},\r\n        onDrop\r\n                      \r\n    })\r\n    const previewFile=(file)=>{\r\n        const reader=new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend=()=>{\r\n            setPreviewSourse(reader.result);\r\n        }\r\n    }\r\n  return (\r\n    <div {...getRootProps}>\r\n    <input {...getInputProps}/>\r\n    enter here for image uploading\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAChC,OAAO,MAAMC,MAAM,GAAGA,CAAC;EACnBC,IAAI;EACJC,KAAK;EACLC,QAAQ;EACRC,QAAQ;EACRC,MAAM;EACNC,KAAK,GAAG,KAAK;EACbC,QAAQ,GAAG,IAAI;EACfC,QAAQ,GAAG;AACf,CAAC,KAAK;EAAAC,EAAA;EACF,MAAM;IAACC;EAAM,CAAC,GAACf,WAAW,CAAEgB,KAAK,IAAGA,KAAK,CAACD,MAAM,CAAC;EACjD,MAAM,CAACE,YAAY,EAACC,eAAe,CAAC,GAAChB,QAAQ,CAAC,IAAI,CAAC;EACnD,MAAM,CAACiB,aAAa,EAACC,gBAAgB,CAAC,GAAClB,QAAQ,CAAC,CAAC;EACjD,MAAMmB,MAAM,GAAEC,YAAY,IAAG;IACzB,MAAMC,IAAI,GAACD,YAAY,CAAC,CAAC,CAAC;IAC1B,IAAGC,IAAI,EAAC;MACJC,WAAW,CAACD,IAAI,CAAC;MACjBL,eAAe,CAACK,IAAI,CAAC;IACzB;EACJ,CAAC;EACD,MAAM;IAACE,YAAY;IAACC;EAAa,CAAC,GAACzB,WAAW,CAAC;IAC3C0B,MAAM,EAAC,CAAChB,KAAK,GAAC;MAAC,SAAS,EAAC,CAAC,OAAO,EAAC,MAAM,EAAC,KAAK;IAAC,CAAC,GAAC;MAAC,SAAS,EAAC,CAAC,MAAM;IAAC,CAAC;IACrEU;EAEJ,CAAC,CAAC;EACF,MAAMG,WAAW,GAAED,IAAI,IAAG;IACtB,MAAMK,MAAM,GAAC,IAAIC,UAAU,CAAC,CAAC;IAC7BD,MAAM,CAACE,aAAa,CAACP,IAAI,CAAC;IAC1BK,MAAM,CAACG,SAAS,GAAC,MAAI;MACjBX,gBAAgB,CAACQ,MAAM,CAACI,MAAM,CAAC;IACnC,CAAC;EACL,CAAC;EACH,oBACE5B,OAAA;IAAA,GAASqB,YAAY;IAAAQ,QAAA,gBACrB7B,OAAA;MAAA,GAAWsB;IAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,kCAE3B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV,CAAC;AAAAvB,EAAA,CAtCYT,MAAM;EAAA,QAUAL,WAAW,EAUSC,WAAW;AAAA;AAAAqC,EAAA,GApBrCjC,MAAM;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}